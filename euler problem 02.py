#!/usr/bin/env python
# encoding: utf-8
"""
euler problem 2.py

Created by Bryan Fillmer on 2013-06-18.
Copyright (c) 2013 . All rights reserved.

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.

"""

from sympy import *

# Loop while fibonacci value is less that 4 million. If mod 2
# returns zero it's even, return it. Increment loop.
def generatefibonacci():
	i = 0
	while fibonacci(i) <= 4000000:
		if fibonacci(i) % 2 == 0:
			yield fibonacci(i)
		i = i + 1

# Sum them all. Easy.
print(sum(list(generatefibonacci())))